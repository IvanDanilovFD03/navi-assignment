{"version":3,"file":"static/js/633.4dc45714.chunk.js","mappings":"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","sources":["components/TrainingCard/styles.ts","components/TrainingCard/index.tsx","modules/ProceduralTrainer/components/TrainerCardsList/styles.ts","modules/ProceduralTrainer/components/TrainerCardsList/index.tsx","modules/ProceduralTrainer/components/ProceduralTrainerSection/styles.ts","modules/ProceduralTrainer/constants/index.ts","modules/ProceduralTrainer/components/ProceduralTrainerSection/index.tsx","modules/ProceduralTrainer/helpers/index.ts","components/RecentCard/styles.ts","components/RecentCard/index.tsx","modules/RecentProcedures/components/RecentProceduresCardsList/styles.ts","modules/RecentProcedures/components/RecentProceduresCardsList/index.tsx","modules/RecentProcedures/components/RecentProceduresSection/styles.ts","modules/RecentProcedures/constants/index.ts","modules/RecentProcedures/components/RecentProceduresSection/index.tsx","pages/MyAccountPage/styles.ts","pages/MyAccountPage/index.tsx"],"sourcesContent":["import { basicTheme } from \"theme\";\r\nimport { SxStyles } from \"types/styles\";\r\n\r\nexport const styles: SxStyles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    px: 8,\r\n    pt: 17,\r\n    pb: 10,\r\n    boxShadow: \"4px 7px 15px rgba(0, 0, 0, 0.2)\",\r\n  },\r\n  percentage: {\r\n    ml: \"auto\",\r\n  },\r\n  title: {\r\n    mt: 20,\r\n    mb: 8,\r\n    textAlign: \"center\",\r\n    height: 88,\r\n    maxWidth: 340,\r\n    [basicTheme.breakpoints.up(\"large\")]: {\r\n      mt: 95,\r\n    },\r\n  },\r\n  subtitle: {\r\n    textAlign: \"center\",\r\n    maxWidth: 340,\r\n  },\r\n  buttonsContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    columnGap: 9,\r\n    mt: 11,\r\n  },\r\n  image: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    zIndex: 0,\r\n  },\r\n  button: {\r\n    p: 6,\r\n    borderRadius: \"100%\",\r\n    bgcolor: basicTheme.palette.mainPalette.white,\r\n    \"&:hover\": {\r\n      bgcolor: basicTheme.palette.mainPalette.white,\r\n    },\r\n  },\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport { Box } from \"UI/Box\";\r\nimport { IconButton } from \"UI/IconButton\";\r\nimport { Typography } from \"UI/Typography\";\r\nimport SendIcon from \"assets/icons/send-icon.png\";\r\nimport StarIcon from \"assets/icons/star-filled-black-icon.png\";\r\nimport Image from \"mui-image\";\r\n\r\nimport { styles } from \"./styles\";\r\n\r\nimport { ProceduralTrainerCardType } from \"types/api\";\r\n\r\nexport interface TrainingCardProps extends ProceduralTrainerCardType {}\r\n\r\nexport const TrainingCard: FC<TrainingCardProps> = ({\r\n  percentage,\r\n  title,\r\n  subtitle,\r\n  image,\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...styles.root,\r\n        backgroundImage: `url(${image})`,\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <Typography sx={styles.percentage} color=\"mainPalette.white\" variant=\"h1\">\r\n        {percentage}%\r\n      </Typography>\r\n      <Typography\r\n        sx={styles.title}\r\n        color=\"mainPalette.white\"\r\n        variant=\"tileSecondary\"\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Typography\r\n        sx={styles.subtitle}\r\n        color=\"mainPalette.white\"\r\n        variant=\"textSmall\"\r\n      >\r\n        {subtitle}\r\n      </Typography>\r\n      <Box sx={styles.buttonsContainer}>\r\n        <IconButton sx={styles.button}>\r\n          <Image src={SendIcon} duration={0} fit=\"cover\" />\r\n        </IconButton>\r\n        <IconButton sx={styles.button}>\r\n          <Image src={StarIcon} duration={0} fit=\"cover\" />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import { basicTheme } from \"theme\";\r\nimport { SxStyles } from \"types/styles\";\r\n\r\nexport const styles: SxStyles = {\r\n  root: {\r\n    display: \"flex\",\r\n    columnGap: 21,\r\n    width: \"100%\",\r\n    pt: 5,\r\n    pb: 10,\r\n    overflowX: \"auto\",\r\n    \"&:-moz-read-only\": {\r\n      scrollbarWidth: \"thin\",\r\n      scrollbarColor: `${basicTheme.palette.grayPalette.blueGray} ${basicTheme.palette.mainPalette.white}`,\r\n    },\r\n    \"::-webkit-scrollbar\": {\r\n      height: 8,\r\n    },\r\n    \"::-webkit-scrollbar-track\": {\r\n      bgcolor: basicTheme.palette.mainPalette.white,\r\n      borderRadius: 3,\r\n    },\r\n    \"::-webkit-scrollbar-thumb\": {\r\n      background: basicTheme.palette.grayPalette.blueGray,\r\n      borderRadius: 3,\r\n    },\r\n    \"::-webkit-scrollbar-thumb:hover\": {\r\n      background: basicTheme.palette.grayPalette.blueGray,\r\n    },\r\n  },\r\n  listItem: {\r\n    minWidth: 400,\r\n    width: 400,\r\n    cursor: \"pointer\",\r\n    [basicTheme.breakpoints.up(\"laptop\")]: {\r\n      transition: \"transform 0.2s ease-in-out\",\r\n      \"&:hover\": {\r\n        transform: \"translateY(-5px)\",\r\n      },\r\n    },\r\n    [basicTheme.breakpoints.up(\"large\")]: {\r\n      minWidth: 600,\r\n      width: 600,\r\n    },\r\n    a: {\r\n      width: \"100%\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n};\r\n","import React, { FC } from \"react\";\r\n\r\nimport { List } from \"UI/List\";\r\nimport { ListItem } from \"UI/ListItem\";\r\nimport { TrainingCard } from \"components/TrainingCard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ProceduralTrainerCardType } from \"types/api\";\r\n\r\nimport { styles } from \"./styles\";\r\n\r\nexport interface TrainerCardsListProps {\r\n  cardsList: ProceduralTrainerCardType[];\r\n}\r\n\r\nexport const TrainerCardsList: FC<TrainerCardsListProps> = React.memo(\r\n  ({ cardsList }) => {\r\n    return (\r\n      <List sx={styles.root}>\r\n        {cardsList.map(({ id, ...rest }) => (\r\n          <ListItem key={id} sx={styles.listItem}>\r\n            <Link to={`/My-Account/${id}`}>\r\n              <TrainingCard id={id} {...rest} />\r\n            </Link>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n);\r\n","import { basicTheme } from \"theme\";\r\nimport { SxStyles } from \"types/styles\";\r\n\r\nexport const styles: SxStyles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"start\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  title: {\r\n    mt: 8,\r\n    mb: 20,\r\n  },\r\n};\r\n","import ProceduralImage1 from \"assets/images/procedural-image-1.png\";\r\nimport ProceduralImage2 from \"assets/images/procedural-image-2.png\";\r\nimport ProceduralImage3 from \"assets/images/procedural-image-3.png\";\r\nimport { ProceduralTrainerCardType } from \"types/api\";\r\n\r\nexport const DUMMY_TRAINING_CARDS_DATA: ProceduralTrainerCardType[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Emergency Procedures\",\r\n    subtitle: \"some sub heading here\",\r\n    percentage: 50,\r\n    image: ProceduralImage1,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Pre-Flight Procedures\",\r\n    subtitle: \"some sub heading here\",\r\n    percentage: 0,\r\n    image: ProceduralImage2,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"CFI\",\r\n    subtitle: \"some sub heading here\",\r\n    percentage: 100,\r\n    image: ProceduralImage3,\r\n  },\r\n];\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Box } from \"UI/Box\";\r\nimport { Typography } from \"UI/Typography\";\r\nimport { TrainerCardsList } from \"../TrainerCardsList\";\r\n\r\nimport { styles } from \"./styles\";\r\n\r\nimport { DUMMY_TRAINING_CARDS_DATA } from \"modules/ProceduralTrainer/constants\";\r\nimport {\r\n  getDayName,\r\n  getDayOfMonth,\r\n  getMonthName,\r\n} from \"modules/ProceduralTrainer/helpers\";\r\n\r\nexport interface ProceduralTrainerSectionProps {}\r\n\r\nexport const ProceduralTrainerSection: FC<ProceduralTrainerSectionProps> =\r\n  React.memo(() => {\r\n    const date = new Date();\r\n\r\n    const formattedDate = `${getDayName(date).toUpperCase()}, ${getMonthName(\r\n      date\r\n    )} ${getDayOfMonth(date)}`;\r\n\r\n    return (\r\n      <Box sx={styles.root}>\r\n        <Typography sx={styles.subtitle} variant=\"titleSmall\">\r\n          {formattedDate}\r\n        </Typography>\r\n        <Typography sx={styles.title} variant=\"h6\">\r\n          Procedural Trainer\r\n        </Typography>\r\n        <TrainerCardsList cardsList={DUMMY_TRAINING_CARDS_DATA} />\r\n      </Box>\r\n    );\r\n  });\r\n","export const getDayName = (date: Date) => {\r\n  return new Intl.DateTimeFormat(\"en-US\", { weekday: \"long\" })\r\n    .format(date)\r\n    .toUpperCase();\r\n};\r\n\r\nexport const getMonthName = (date: Date) => {\r\n  return new Intl.DateTimeFormat(\"en-US\", { month: \"long\" }).format(date);\r\n};\r\n\r\nexport const getDayOfMonth = (date: Date) => {\r\n  return date.getDate();\r\n};\r\n","import { basicTheme } from \"theme\";\r\nimport { SxStyles } from \"types/styles\";\r\n\r\nexport const styles: SxStyles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    bgcolor: basicTheme.palette.grayPalette.gray,\r\n    borderRadius: 6,\r\n    alignItems: \"center\",\r\n    px: 8,\r\n    pt: 23,\r\n    pb: 5,\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  iconsContainer: {\r\n    display: \"flex\",\r\n    columnGap: 2,\r\n  },\r\n  icon: {\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  title: {\r\n    mt: 5,\r\n  },\r\n  subtitle: {},\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport { Box } from \"UI/Box\";\r\nimport { Typography } from \"UI/Typography\";\r\nimport FilledStar from \"assets/icons/star-filled-white-icon.png\";\r\nimport WhiteStar from \"assets/icons/star-white-icon.png\";\r\nimport Image from \"mui-image\";\r\n\r\nimport { styles } from \"./styles\";\r\n\r\nimport { RecentProceduresCardType } from \"types/api\";\r\n\r\nexport interface RecentCardProps extends RecentProceduresCardType {}\r\n\r\nexport const RecentCard: FC<RecentProceduresCardType> = ({\r\n  title,\r\n  subtitle,\r\n  stars,\r\n}) => {\r\n  return (\r\n    <Box sx={styles.root}>\r\n      <Box sx={styles.iconsContainer}>\r\n        {Array.from({ length: stars }).map((_, index) => (\r\n          <Box sx={styles.icon} key={index}>\r\n            <Image src={FilledStar} duration={0} fit=\"contain\" />\r\n          </Box>\r\n        ))}\r\n        {Array.from({ length: 3 - stars }).map((_, index) => (\r\n          <Box sx={styles.icon} key={index}>\r\n            <Image src={WhiteStar} duration={0} fit=\"contain\" />\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <Typography\r\n        sx={styles.title}\r\n        color=\"mainPalette.white\"\r\n        variant=\"textMain\"\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Typography\r\n        sx={styles.subtitle}\r\n        color=\"mainPalette.white\"\r\n        variant=\"textSecondary\"\r\n      >\r\n        {subtitle}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","import { basicTheme } from \"theme\";\r\nimport { SxStyles } from \"types/styles\";\r\n\r\nexport const styles: SxStyles = {\r\n  root: {\r\n    display: \"flex\",\r\n    columnGap: 6,\r\n    width: \"100%\",\r\n    pb: 10,\r\n    overflowX: \"auto\",\r\n    \"&:-moz-read-only\": {\r\n      scrollbarWidth: \"thin\",\r\n      scrollbarColor: `${basicTheme.palette.grayPalette.blueGray} ${basicTheme.palette.mainPalette.white}`,\r\n    },\r\n    \"::-webkit-scrollbar\": {\r\n      height: 8,\r\n    },\r\n    \"::-webkit-scrollbar-track\": {\r\n      bgcolor: basicTheme.palette.mainPalette.white,\r\n      borderRadius: 3,\r\n    },\r\n    \"::-webkit-scrollbar-thumb\": {\r\n      background: basicTheme.palette.grayPalette.blueGray,\r\n      borderRadius: 3,\r\n    },\r\n    \"::-webkit-scrollbar-thumb:hover\": {\r\n      background: basicTheme.palette.grayPalette.blueGray,\r\n    },\r\n  },\r\n  listItem: {\r\n    minWidth: 300,\r\n    width: 300,\r\n    [basicTheme.breakpoints.up(\"large\")]: {\r\n      minWidth: 400,\r\n      width: 400,\r\n    },\r\n  },\r\n};\r\n","import React, { FC } from \"react\";\r\n\r\nimport { List } from \"UI/List\";\r\nimport { ListItem } from \"UI/ListItem\";\r\nimport { RecentCard } from \"components/RecentCard\";\r\n\r\nimport { styles } from \"./styles\";\r\n\r\nimport { RecentProceduresCardType } from \"types/api\";\r\n\r\nexport interface RecentProceduresCardsListProps {\r\n  cardsList: RecentProceduresCardType[];\r\n}\r\n\r\nexport const RecentProceduresCardsList: FC<RecentProceduresCardsListProps> =\r\n  React.memo(({ cardsList }) => {\r\n    return (\r\n      <List sx={styles.root}>\r\n        {cardsList.map(({ id, ...rest }) => (\r\n          <ListItem key={id} sx={styles.listItem}>\r\n            <RecentCard id={id} {...rest} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  });\r\n","import { basicTheme } from \"theme\";\r\nimport { SxStyles } from \"types/styles\";\r\n\r\nexport const styles: SxStyles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"start\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  title: {\r\n    mt: 8,\r\n    mb: 20,\r\n  },\r\n};\r\n","import { RecentProceduresCardType } from \"types/api\";\r\n\r\nexport const DUMMY_RECENT_CARDS_DATA: RecentProceduresCardType[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Engine Out\",\r\n    subtitle: \"During Flight\",\r\n    stars: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Engine Out\",\r\n    subtitle: \"During Flight\",\r\n    stars: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Engine Out\",\r\n    subtitle: \"During Flight\",\r\n    stars: 2,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Engine Out\",\r\n    subtitle: \"During Flight\",\r\n    stars: 1,\r\n  },\r\n];\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Box } from \"UI/Box\";\r\nimport { Typography } from \"UI/Typography\";\r\nimport { RecentProceduresCardsList } from \"../RecentProceduresCardsList\";\r\n\r\nimport { styles } from \"./styles\";\r\n\r\nimport { DUMMY_RECENT_CARDS_DATA } from \"modules/RecentProcedures/constants\";\r\n\r\nexport interface RecentProceduresSectionProps {}\r\n\r\nexport const RecentProceduresSection: FC<RecentProceduresSectionProps> =\r\n  React.memo(() => {\r\n    return (\r\n      <Box sx={styles.root}>\r\n        <Typography sx={styles.title}>Recent procedures</Typography>\r\n        <RecentProceduresCardsList cardsList={DUMMY_RECENT_CARDS_DATA} />\r\n      </Box>\r\n    );\r\n  });\r\n","import { basicTheme } from \"theme\";\r\nimport { SxStyles } from \"types/styles\";\r\n\r\nexport const styles: SxStyles = {\r\n  root: {\r\n    pt: 25,\r\n    bgcolor: basicTheme.palette.grayPalette.lightGray,\r\n    height: \"100%\",\r\n    [basicTheme.breakpoints.up(\"large\")]: {\r\n      pt: 35,\r\n    },\r\n  },\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport { Container } from \"UI/Container\";\r\nimport { ProceduralTrainerSection } from \"modules/ProceduralTrainer\";\r\nimport { RecentProceduresSection } from \"modules/RecentProcedures\";\r\n\r\nimport { styles } from \"./styles\";\r\n\r\ninterface MyAccountPageProps {}\r\n\r\nconst MyAccountPage: FC<MyAccountPageProps> = () => {\r\n  return (\r\n    <Container sx={styles.root}>\r\n      <ProceduralTrainerSection />\r\n      <RecentProceduresSection />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyAccountPage;\r\n"],"names":["styles","root","display","flexDirection","borderRadius","alignItems","width","position","overflow","px","pt","pb","boxShadow","percentage","ml","title","mt","mb","textAlign","height","maxWidth","basicTheme","breakpoints","up","subtitle","buttonsContainer","justifyContent","columnGap","image","objectFit","top","left","right","bottom","zIndex","button","p","bgcolor","palette","mainPalette","white","TrainingCard","_ref","_jsxs","Box","sx","backgroundImage","concat","backgroundSize","children","Typography","color","variant","_jsx","IconButton","Image","src","duration","fit","overflowX","scrollbarWidth","scrollbarColor","grayPalette","blueGray","background","listItem","minWidth","cursor","transition","transform","a","textDecoration","TrainerCardsList","React","cardsList","List","map","_ref2","id","rest","ListItem","Link","to","DUMMY_TRAINING_CARDS_DATA","ProceduralTrainerSection","date","Date","formattedDate","Intl","DateTimeFormat","weekday","format","toUpperCase","getDayName","month","getMonthName","getDate","getDayOfMonth","gray","iconsContainer","icon","RecentCard","stars","Array","from","length","_","index","RecentProceduresCardsList","DUMMY_RECENT_CARDS_DATA","RecentProceduresSection","lightGray","MyAccountPage","Container"],"sourceRoot":""}